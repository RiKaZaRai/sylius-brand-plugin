# src/Resources/config/services.yaml
services:
    _defaults:
        autowire: true
        autoconfigure: true

    Rika\SyliusBrandPlugin\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Tests,Form}'

    Rika\SyliusBrandPlugin\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    # Factory avec initialisation de la locale
    rika_sylius_brand.factory.brand.inner:
        class: Sylius\Resource\Factory\Factory
        arguments:
            - 'Rika\SyliusBrandPlugin\Entity\Brand'

    rika_sylius_brand.factory.brand:
        class: Rika\SyliusBrandPlugin\Factory\BrandFactory
        decorates: 'rika_sylius_brand.factory.brand.inner'
        arguments:
            - '@.inner'
            - '@sylius.context.locale'

    rika_sylius_brand.factory.brand_translation:
        class: Sylius\Resource\Factory\Factory
        arguments:
            - 'Rika\SyliusBrandPlugin\Entity\BrandTranslation'

    # Event listeners
    Rika\SyliusBrandPlugin\EventListener\BrandEventListener:
        arguments:
            $uploadDir: '%rika_sylius_brand.upload_dir%'
        tags:
            - { name: kernel.event_listener, event: 'rika_sylius_brand.brand.pre_create', method: uploadLogo }
            - { name: kernel.event_listener, event: 'rika_sylius_brand.brand.pre_update', method: uploadLogo }

    Rika\SyliusBrandPlugin\EventListener\ProductMappingListener:
        tags:
            - { name: doctrine.event_subscriber, priority: 100 }

    Rika\SyliusBrandPlugin\Menu\AdminMenuListener:
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: __invoke }

    # Configuration des formulaires
    Rika\SyliusBrandPlugin\Form\Type\BrandType:
        arguments:
            $dataClass: 'Rika\SyliusBrandPlugin\Entity\Brand'
            $validationGroups: ['sylius']
        tags: 
            - { name: 'form.type' }

    Rika\SyliusBrandPlugin\Form\Type\BrandTranslationType:
        arguments:
            $dataClass: 'Rika\SyliusBrandPlugin\Entity\BrandTranslation'
            $validationGroups: ['sylius']
        tags: 
            - { name: 'form.type' }

    Rika\SyliusBrandPlugin\Form\Type\BrandChoiceType:
        tags: 
            - { name: 'form.type' }

    # Extensions de formulaires
    Rika\SyliusBrandPlugin\Form\Extension\ProductTypeExtension:
        tags:
            - { name: 'form.type_extension', extended_type: 'Sylius\Bundle\ProductBundle\Form\Type\ProductType' }
