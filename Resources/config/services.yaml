imports:
    - { resource: 'resources.yaml' }
    - { resource: 'grids.yaml' }

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Rika\SyliusBrandPlugin\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Tests,Controller}'

    # Repository personnalisé - Version Sylius 2.1
    Rika\SyliusBrandPlugin\Repository\BrandRepository:
        class: Rika\SyliusBrandPlugin\Repository\BrandRepository
        arguments:
            - '@doctrine.orm.entity_manager'
            - !service
                class: Doctrine\ORM\Mapping\ClassMetadata
                factory: ['@doctrine.orm.entity_manager', getClassMetadata]
                arguments:
                    - 'Rika\SyliusBrandPlugin\Entity\Brand'
            - '@sylius.context.locale'
        tags:
            - { name: 'doctrine.repository_service' }

    # Alias pour que Sylius trouve le repository
    rika_sylius_brand.repository.brand: '@Rika\SyliusBrandPlugin\Repository\BrandRepository'

    # Factory avec initialisation de locale
    Rika\SyliusBrandPlugin\Factory\BrandFactory:
        autowire: false
        arguments:
            - !service
                class: Sylius\Resource\Factory\Factory
                arguments:
                    - 'Rika\SyliusBrandPlugin\Entity\Brand'
            - '@sylius.context.locale'

    # Alias pour que Sylius trouve la factory
    rika_sylius_brand.factory.brand: '@Rika\SyliusBrandPlugin\Factory\BrandFactory'

    rika_sylius_brand.factory.brand_translation:
        class: Sylius\Resource\Factory\Factory
        arguments:
            - 'Rika\SyliusBrandPlugin\Entity\BrandTranslation'

    # Event subscribers / listeners
    # BrandEventListener implémente EventSubscriberInterface => on l'enregistre comme subscriber
    Rika\SyliusBrandPlugin\EventListener\BrandEventListener:
        arguments:
            $uploadDir: '%rika_sylius_brand.upload_dir%' # défini par l'Extension
        tags:
            - { name: kernel.event_subscriber }

    # Slug generation listener for Doctrine lifecycle events
    Rika\SyliusBrandPlugin\EventListener\BrandSlugListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    Rika\SyliusBrandPlugin\EventListener\ProductMappingListener:
        tags:
            - { name: doctrine.event_subscriber, priority: 100 }

    Rika\SyliusBrandPlugin\Menu\AdminMenuListener:
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: __invoke }

    # Form types
    Rika\SyliusBrandPlugin\Form\Type\BrandType:
        arguments:
            $dataClass: 'Rika\SyliusBrandPlugin\Entity\Brand'
            $validationGroups: ['sylius']
        tags:
            - { name: 'form.type' }

    Rika\SyliusBrandPlugin\Form\Type\BrandTranslationType:
        arguments:
            $dataClass: 'Rika\SyliusBrandPlugin\Entity\BrandTranslation'
            $validationGroups: ['sylius']
        tags:
            - { name: 'form.type' }

    Rika\SyliusBrandPlugin\Form\Type\BrandChoiceType:
        tags:
            - { name: 'form.type' }

    # Form extensions
    Rika\SyliusBrandPlugin\Form\Extension\:
        resource: '../../Form/Extension'
        tags: ['form.type_extension']
